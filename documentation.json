{
    "pipes": [],
    "interfaces": [
        {
            "name": "Todo",
            "id": "interface-Todo-332da370ed01a20133a695a76c3962486541449efb47c30d87a611d49a65cd0daef9284ac3c239e7915e6f257bc7999bdaa249a87cacf25ce40cc2f50e3e0206",
            "file": "src/app/models/todo.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { v4 as uuid } from 'uuid';\n\nexport interface Todo {\n  id: string;\n  title: string;\n}\n\nexport function createTodo(title: string): Todo {\n  const id = uuid();\n  return { id, title };\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TodoProps",
            "id": "interface-TodoProps-5de387d44196e66bea343de1e365c868db78ff2af8830d56c76904e58ca5a9975a232977fb070b988810adca4b22c79176f11388d86ce419557dee42454c7ef7",
            "file": "src/app/store/todo-store/todo.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore, withProps } from '@ngneat/elf';\r\nimport { createTodo, Todo } from '../../models/todo.model';\r\n\r\ninterface TodoProps {\r\n  todoes: Todo[];\r\n}\r\n\r\nexport const todoStore = createStore(\r\n  { name: 'todo' },\r\n  withProps<TodoProps>({\r\n    todoes: [createTodo('Todo1'), createTodo('Todo2'), createTodo('Todo3')],\r\n  })\r\n);\r\n",
            "properties": [
                {
                    "name": "todoes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Todo[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "TodoStoreService",
            "id": "injectable-TodoStoreService-8618e534ab00d495ba3f62a4e61a080e7541bec47a481b7ba6e22b84285ea3ca941541492d4ac6d9ae7a57d526f5adb0aba79d241e9c90a7bcd58bc8bd92fcc6",
            "file": "src/app/store/todo-store/todo-store.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { todoStore } from './todo.store';\nimport { select, setProp } from '@ngneat/elf';\nimport { createTodo } from 'src/app/models/todo.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TodoStoreService {\n  get todoes$() {\n    return todoStore.pipe(select((state) => state.todoes));\n  }\n\n  constructor() {}\n\n  add(name: string) {\n    const todo = createTodo(name);\n    todoStore.update(setProp('todoes', (todoes) => [...todoes, todo]));\n  }\n\n  delete(id: string) {\n    todoStore.update(\n      setProp('todoes', (todoes) => todoes.filter((todo) => todo.id != id))\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "accessors": {
                "todoes$": {
                    "name": "todoes$",
                    "getSignature": {
                        "name": "todoes$",
                        "type": "",
                        "returnType": "",
                        "line": 10
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f70b8dc5e0d56266343fb75a66320b8e2f66cb3fd271695a6147da28229a9a96eae5c248afcc4d455837ef71ce949bf7f80e6b95cd49c05fda9f7f803d1a1d47",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div>\n  <app-title></app-title>\n  <app-todo-add></app-todo-add>\n  <div>List</div>\n  <app-todoes></app-todoes>\n</div>\n"
        },
        {
            "name": "TitleComponent",
            "id": "component-TitleComponent-729ef390406f80242e535fe6cd819b0a91c828e82b641b78c377b7d2f5251445587b601f2a46b5a92b783daaa8ad173071aaede7cf80566462dcc63f9ef16545",
            "file": "src/app/title/title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-title",
            "styleUrls": [
                "./title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "defaultValue": "'Todo Application'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n})\nexport class TitleComponent implements OnInit {\n  @Input() title: string = 'Todo Application';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./title.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>{{ title }}</h1>\n"
        },
        {
            "name": "TodoAddComponent",
            "id": "component-TodoAddComponent-20490d6c14d5540c2c1fc850f635f3b2495e59858e26920ca0567fdb59b0177714c4d28debac6f35013cee156b276db57f0bb0c9fb6d7c05b75dbe20b801d90d",
            "file": "src/app/todo-add/todo-add.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todo-add",
            "styleUrls": [
                "./todo-add.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todo-add.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "addTodo",
                    "args": [
                        {
                            "name": "todoTitle",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "todoTitle",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TodoStoreService } from '../store/todo-store/todo-store.service';\n\n@Component({\n  selector: 'app-todo-add',\n  templateUrl: './todo-add.component.html',\n  styleUrls: ['./todo-add.component.scss'],\n})\nexport class TodoAddComponent implements OnInit {\n  constructor(private readonly todoStore: TodoStoreService) {}\n\n  ngOnInit(): void {}\n\n  addTodo(todoTitle: HTMLInputElement) {\n    if (todoTitle.value) {\n      this.todoStore.add(todoTitle.value);\n\n      todoTitle.value = '';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todo-add.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "todoStore",
                        "type": "TodoStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "todoStore",
                        "type": "TodoStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<input #todoTitle (keyup.enter)=\"addTodo(todoTitle)\" />\n<button type=\"button\" (click)=\"addTodo(todoTitle)\">Add</button>\n"
        },
        {
            "name": "TodoComponent",
            "id": "component-TodoComponent-62aee71af98616ced8076d86040f33238fc104a01c9427a0cc991ab1c9b43a9b6f92d7e5a60b9e3645ce35299fd2ddcb45f296d0c21f8d2cf8f0e7326b95cec2",
            "file": "src/app/todoes/todo/todo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todo",
            "styleUrls": [
                "./todo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "todo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Todo",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Todo } from 'src/app/models/todo.model';\nimport { TodoStoreService } from 'src/app/store/todo-store/todo-store.service';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss'],\n})\nexport class TodoComponent implements OnInit {\n  @Input() todo?: Todo;\n\n  constructor(private readonly todoStore: TodoStoreService) {}\n\n  ngOnInit(): void {}\n\n  onDelete(id: string) {\n    this.todoStore.delete(id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "todoStore",
                        "type": "TodoStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "todoStore",
                        "type": "TodoStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<li *ngIf=\"todo\">\n  {{ todo.title }}\n  <button [attr.data-testid]=\"todo.id\" (click)=\"onDelete(todo.id)\">\n    Delete\n  </button>\n</li>\n"
        },
        {
            "name": "TodoesComponent",
            "id": "component-TodoesComponent-0ede628ae2ebf08747d6c7f0932638d70c243950b7226f545a37c20abc7a2140b997e2d9c40d09786794ca0eae56e300d5e8801afe6edf882d84972da1e374be",
            "file": "src/app/todoes/todoes.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todoes",
            "styleUrls": [
                "./todoes.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todoes.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "todoes$",
                    "defaultValue": "this.todoStore.todoes$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { TodoStoreService } from '../store/todo-store/todo-store.service';\n\n@Component({\n  selector: 'app-todoes',\n  templateUrl: './todoes.component.html',\n  styleUrls: ['./todoes.component.scss'],\n})\nexport class TodoesComponent {\n  todoes$ = this.todoStore.todoes$;\n\n  constructor(private readonly todoStore: TodoStoreService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todoes.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "todoStore",
                        "type": "TodoStoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "todoStore",
                        "type": "TodoStoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ul>\n  <app-todo *ngFor=\"let todo of todoes$ | async\" [todo]=\"todo\"></app-todo>\n</ul>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-ecf8ee65faf02d26de74113e50ebe4eea120f74ef24e671db341af895da560b75da1c346df8449f7db649f3a875a57687bf405d34c9e8f423642dbe9a12125a0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { TodoesComponent } from './todoes/todoes.component';\nimport { TodoComponent } from './todoes/todo/todo.component';\nimport { TodoAddComponent } from './todo-add/todo-add.component';\nimport { TitleComponent } from './title/title.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoesComponent,\n    TodoComponent,\n    TodoAddComponent,\n    TitleComponent,\n  ],\n  imports: [BrowserModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "TitleComponent"
                        },
                        {
                            "name": "TodoAddComponent"
                        },
                        {
                            "name": "TodoComponent"
                        },
                        {
                            "name": "TodoesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/title/title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<TitleComponent>",
                "defaultValue": "{\n  render: (args) => ({\n    template: `<app-title [title]=\"title\"></app-title>`,\n    props: args,\n  }),\n  args: {\n    title: 'Test Title',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/todo-add/todo-add.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<TodoAddComponent>",
                "defaultValue": "{\n  render: (args) => ({\n    template: `<app-todo-add></app-todo-add>`,\n    props: args,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/todoes/todoes.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<TodoesComponent>",
                "defaultValue": "{\n  render: (args) => ({\n    template: `<app-todoes></app-todoes>`,\n    props: args,\n  }),\n  args: {},\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/todoes/todo/todo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<TodoComponent>",
                "defaultValue": "{\n  render: (args) => ({\n    template: `<app-todo [todo]=\"todo\"></app-todo>`,\n    props: args,\n  }),\n  args: {\n    todo: createTodo('Todo'),\n  },\n}"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/todoes/todoes.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<TodoesComponent>",
                "defaultValue": "{\n  name: 'Todo を削除する',\n  render: (args) => ({\n    template: `<app-todoes></app-todoes>`,\n    props: args,\n  }),\n  args: {},\n  play: async () => {\n    const deleteTodo2 = await screen.findByTestId('2');\n    fireEvent.click(deleteTodo2);\n  },\n}"
            },
            {
                "name": "Delete",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/todoes/todo/todo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<TodoComponent>",
                "defaultValue": "{\n  name: '削除するボタンを押す',\n  render: (args) => ({\n    template: `<app-todo [todo]=\"todo\"></app-todo>`,\n    props: args,\n  }),\n  args: {\n    todo: createTodo('Todo'),\n  },\n  play: async () => {\n    const deleteButton = screen.getByRole('button');\n    fireEvent.click(deleteButton);\n  },\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "todoStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/todo-store/todo.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: 'todo' },\r\n  withProps<TodoProps>({\r\n    todoes: [createTodo('Todo1'), createTodo('Todo2'), createTodo('Todo3')],\r\n  })\r\n)"
            }
        ],
        "functions": [
            {
                "name": "createTodo",
                "file": "src/app/models/todo.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "title",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Todo",
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/title/title.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/title/title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<TitleComponent>",
                    "defaultValue": "{\n  render: (args) => ({\n    template: `<app-title [title]=\"title\"></app-title>`,\n    props: args,\n  }),\n  args: {\n    title: 'Test Title',\n  },\n}"
                }
            ],
            "src/app/todo-add/todo-add.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/todo-add/todo-add.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<TodoAddComponent>",
                    "defaultValue": "{\n  render: (args) => ({\n    template: `<app-todo-add></app-todo-add>`,\n    props: args,\n  }),\n}"
                }
            ],
            "src/app/todoes/todoes.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/todoes/todoes.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<TodoesComponent>",
                    "defaultValue": "{\n  render: (args) => ({\n    template: `<app-todoes></app-todoes>`,\n    props: args,\n  }),\n  args: {},\n}"
                },
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/todoes/todoes.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<TodoesComponent>",
                    "defaultValue": "{\n  name: 'Todo を削除する',\n  render: (args) => ({\n    template: `<app-todoes></app-todoes>`,\n    props: args,\n  }),\n  args: {},\n  play: async () => {\n    const deleteTodo2 = await screen.findByTestId('2');\n    fireEvent.click(deleteTodo2);\n  },\n}"
                }
            ],
            "src/app/todoes/todo/todo.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/todoes/todo/todo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<TodoComponent>",
                    "defaultValue": "{\n  render: (args) => ({\n    template: `<app-todo [todo]=\"todo\"></app-todo>`,\n    props: args,\n  }),\n  args: {\n    todo: createTodo('Todo'),\n  },\n}"
                },
                {
                    "name": "Delete",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/todoes/todo/todo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<TodoComponent>",
                    "defaultValue": "{\n  name: '削除するボタンを押す',\n  render: (args) => ({\n    template: `<app-todo [todo]=\"todo\"></app-todo>`,\n    props: args,\n  }),\n  args: {\n    todo: createTodo('Todo'),\n  },\n  play: async () => {\n    const deleteButton = screen.getByRole('button');\n    fireEvent.click(deleteButton);\n  },\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/store/todo-store/todo.store.ts": [
                {
                    "name": "todoStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/todo-store/todo.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: 'todo' },\r\n  withProps<TodoProps>({\r\n    todoes: [createTodo('Todo1'), createTodo('Todo2'), createTodo('Todo3')],\r\n  })\r\n)"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/models/todo.model.ts": [
                {
                    "name": "createTodo",
                    "file": "src/app/models/todo.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Todo",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/models/todo.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Todo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/todo.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createTodo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todo-store/todo-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TodoStoreService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todo-store/todo.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TodoProps",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todo-store/todo.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "todoStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/title/title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/title/title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/todo-add/todo-add.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodoAddComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/todo-add/todo-add.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/todoes/todo/todo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/todoes/todo/todo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/todoes/todo/todo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/todoes/todoes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodoesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/todoes/todoes.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/todoes/todoes.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Delete",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}