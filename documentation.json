{
    "pipes": [],
    "interfaces": [
        {
            "name": "Task",
            "id": "interface-Task-ab862794157eff24601f25619daa6dfa3d30f24863950b50d5cf27cd28d6ce0a24876718a178ce9c9fd44c383a9cf8a8621a8ff5a8ed12f341e6a39684b5d982",
            "file": "src/app/models/task.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Task {\r\n  id: string;\r\n  title: string;\r\n  state: string;\r\n  updatedAt: Date;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "updatedAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1fb18f8ece99c180113d69016ccb8543c8d6a705f9d19446616cbb6cc539b71c05c985272c7fccbac11ecf478cb56c42a6d03ab31c012d7d60b037e5cbfdd2ff",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "todoes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "addTodo",
                    "args": [
                        {
                            "name": "todo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "todo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  todoes: string[] = [];\n\n  constructor() {}\n\n  addTodo(todo: string) {\n    this.todoes.push(todo);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div>\n  <app-title></app-title>\n  <app-todo-add (onAddButton)=\"addTodo($event)\"></app-todo-add>\n  <div>List</div>\n  <app-todoes [todoes]=\"todoes\"></app-todoes>\n</div>\n"
        },
        {
            "name": "TaskComponent",
            "id": "component-TaskComponent-f26edbb44eb33a28798fdc4a5b3983f026a5178f28384f8002b5dcbc7068e119f38ebb8a4f15880d04f5fd47d5fba5c703a0172b1bfc117d7caeb184c950feca",
            "file": "src/app/task/task.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task",
            "styleUrls": [
                "./task.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./task.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "task",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Task",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onArchiveTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "onPinTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onArchive",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nアーカイブイベントを発生する\n",
                    "description": "<p>アーカイブイベントを発生する</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 718,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 712,
                                "end": 717,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>string</p>\n"
                        }
                    ]
                },
                {
                    "name": "onPin",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nピンイベントを発生させる\n",
                    "description": "<p>ピンイベントを発生させる</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 611,
                                "end": 613,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 605,
                                "end": 610,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>string</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Task } from '../models/task.model';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss'],\n})\nexport class TaskComponent implements OnInit {\n  @Input() task?: Task;\n\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onPinTask = new EventEmitter<Event>();\n\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onArchiveTask = new EventEmitter<Event>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  /**\n   * ピンイベントを発生させる\n   * @param id string\n   */\n  onPin(id: any) {\n    this.onPinTask.emit(id);\n  }\n\n  /**\n   * アーカイブイベントを発生する\n   * @param id string\n   */\n  onArchive(id: any) {\n    this.onArchiveTask.emit(id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Reset.less\r\n * Props to Eric Meyer (meyerweb.com) for his CSS reset file. We're using an adapted version here\tthat cuts out some of the reset HTML elements we will never need here (i.e., dfn, samp, etc).\r\n * ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */\r\n html,\r\n body {\r\n   margin: 0;\r\n   padding: 0;\r\n }\r\n h1,\r\n h2,\r\n h3,\r\n h4,\r\n h5,\r\n h6,\r\n p,\r\n blockquote,\r\n pre,\r\n a,\r\n abbr,\r\n acronym,\r\n address,\r\n cite,\r\n code,\r\n del,\r\n dfn,\r\n em,\r\n img,\r\n q,\r\n s,\r\n samp,\r\n small,\r\n strike,\r\n strong,\r\n sub,\r\n sup,\r\n tt,\r\n var,\r\n dd,\r\n dl,\r\n dt,\r\n li,\r\n ol,\r\n ul,\r\n fieldset,\r\n form,\r\n label,\r\n legend,\r\n button,\r\n table,\r\n caption,\r\n tbody,\r\n tfoot,\r\n thead,\r\n tr,\r\n th,\r\n td {\r\n   margin: 0;\r\n   padding: 0;\r\n   border: 0;\r\n   font-weight: normal;\r\n   font-style: normal;\r\n   font-size: 100%;\r\n   line-height: 1;\r\n   font-family: inherit;\r\n }\r\n table {\r\n   border-collapse: collapse;\r\n   border-spacing: 0;\r\n }\r\n ol,\r\n ul {\r\n   list-style: none;\r\n }\r\n q:before,\r\n q:after,\r\n blockquote:before,\r\n blockquote:after {\r\n   content: \"\";\r\n }\r\n html {\r\n   font-size: 100%;\r\n   -webkit-text-size-adjust: 100%;\r\n   -ms-text-size-adjust: 100%;\r\n }\r\n a:focus {\r\n   outline: thin dotted;\r\n }\r\n a:hover,\r\n a:active {\r\n   outline: 0;\r\n }\r\n article,\r\n aside,\r\n details,\r\n figcaption,\r\n figure,\r\n footer,\r\n header,\r\n hgroup,\r\n nav,\r\n section {\r\n   display: block;\r\n }\r\n audio,\r\n canvas,\r\n video {\r\n   display: inline-block;\r\n   *display: inline;\r\n   *zoom: 1;\r\n }\r\n audio:not([controls]) {\r\n   display: none;\r\n }\r\n sub,\r\n sup {\r\n   font-size: 75%;\r\n   line-height: 0;\r\n   position: relative;\r\n   vertical-align: baseline;\r\n }\r\n sup {\r\n   top: -0.5em;\r\n }\r\n sub {\r\n   bottom: -0.25em;\r\n }\r\n img {\r\n   border: 0;\r\n   -ms-interpolation-mode: bicubic;\r\n }\r\n button,\r\n input,\r\n select,\r\n textarea {\r\n   font-size: 100%;\r\n   margin: 0;\r\n   vertical-align: baseline;\r\n   *vertical-align: middle;\r\n }\r\n button,\r\n input {\r\n   line-height: normal;\r\n   *overflow: visible;\r\n }\r\n button::-moz-focus-inner,\r\n input::-moz-focus-inner {\r\n   border: 0;\r\n   padding: 0;\r\n }\r\n button,\r\n input[type=\"button\"],\r\n input[type=\"reset\"],\r\n input[type=\"submit\"] {\r\n   cursor: pointer;\r\n   -webkit-appearance: button;\r\n }\r\n input[type=\"search\"] {\r\n   -webkit-appearance: textfield;\r\n   -webkit-box-sizing: content-box;\r\n   -moz-box-sizing: content-box;\r\n   box-sizing: content-box;\r\n }\r\n input[type=\"search\"]::-webkit-search-decoration {\r\n   -webkit-appearance: none;\r\n }\r\n textarea {\r\n   overflow: auto;\r\n   vertical-align: top;\r\n }\r\n @keyframes spin {\r\n   0% {\r\n     transform: rotate(0deg);\r\n   }\r\n   100% {\r\n     transform: rotate(359deg);\r\n   }\r\n }\r\n @keyframes glow {\r\n   0%,\r\n   100% {\r\n     opacity: 1;\r\n   }\r\n   50% {\r\n     opacity: 0.5;\r\n   }\r\n }\r\n @font-face {\r\n   font-family: 'Nunito Sans';\r\n   font-style: italic;\r\n   font-weight: 400;\r\n   src: url(https://fonts.gstatic.com/s/nunitosans/v6/pe0oMImSLYBIv1o4X1M8cce4E9lKcw.ttf) format('truetype');\r\n }\r\n @font-face {\r\n   font-family: 'Nunito Sans';\r\n   font-style: normal;\r\n   font-weight: 400;\r\n   src: url(https://fonts.gstatic.com/s/nunitosans/v6/pe0qMImSLYBIv1o4X1M8cce9I94.ttf) format('truetype');\r\n }\r\n @font-face {\r\n   font-family: 'Nunito Sans';\r\n   font-style: normal;\r\n   font-weight: 800;\r\n   src: url(https://fonts.gstatic.com/s/nunitosans/v6/pe03MImSLYBIv1o4X1M8cc8aBc5tU1Q.ttf) format('truetype');\r\n }\r\n .force-wrap {\r\n   word-wrap: break-word;\r\n   word-break: break-all;\r\n   -ms-word-break: break-all;\r\n   word-break: break-word;\r\n   hyphens: auto;\r\n }\r\n .type-light {\r\n   font-family: 'Nunito Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n   font-weight: 300;\r\n }\r\n .type-bold {\r\n   font-family: 'Nunito Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n   font-weight: 800;\r\n }\r\n .type-italic {\r\n   font-family: 'Nunito Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n   font-weight: 400;\r\n   font-style: italic;\r\n }\r\n * {\r\n   box-sizing: border-box;\r\n   -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n   -webkit-tap-highlight-color: transparent;\r\n }\r\n html,\r\n button,\r\n input,\r\n textarea,\r\n select {\r\n   outline: none;\r\n   -webkit-font-smoothing: antialiased;\r\n   -moz-osx-font-smoothing: grayscale;\r\n }\r\n body {\r\n   font-family: 'Nunito Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n   font-style: 400;\r\n   color: #333;\r\n   font-size: 16px;\r\n   background-color: #26c6da;\r\n }\r\n h1,\r\n h2,\r\n h3,\r\n h4,\r\n h5,\r\n h6 {\r\n   font-family: 'Nunito Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n   font-style: 400;\r\n   margin: 0;\r\n   padding: 0;\r\n }\r\n h1 {\r\n   font-size: 40px;\r\n   line-height: 48px;\r\n }\r\n h2 {\r\n   font-size: 28px;\r\n   line-height: 32px;\r\n }\r\n h3 {\r\n   font-size: 24px;\r\n   line-height: 28px;\r\n }\r\n h4 {\r\n   font-size: 20px;\r\n   line-height: 24px;\r\n }\r\n h5 {\r\n   font-size: 14px;\r\n   line-height: 20px;\r\n   color: #ccc;\r\n   text-transform: uppercase;\r\n }\r\n h6 {\r\n   color: #aaa;\r\n }\r\n p {\r\n   font-size: 16px;\r\n   line-height: 24px;\r\n }\r\n sub,\r\n sup {\r\n   font-size: 0.8em;\r\n }\r\n sub {\r\n   bottom: -0.2em;\r\n }\r\n sup {\r\n   top: -0.2em;\r\n }\r\n b {\r\n   font-weight: bold;\r\n }\r\n em {\r\n   font-style: italic;\r\n }\r\n input[type=\"text\"],\r\n input[type=\"email\"],\r\n input[type=\"password\"],\r\n textarea {\r\n   font-size: 14px;\r\n   line-height: 20px;\r\n   font-family: 'Nunito Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n   font-style: 400;\r\n   padding: 0.75rem 0;\r\n   line-height: 1.5rem !important;\r\n   border: none;\r\n   border-radius: 0;\r\n   box-sizing: border-box;\r\n   color: #333;\r\n   outline: none;\r\n }\r\n input[type=\"text\"] ::placeholder,\r\n input[type=\"email\"] ::placeholder,\r\n input[type=\"password\"] ::placeholder,\r\n textarea ::placeholder {\r\n   color: #778b91;\r\n }\r\n input[type=\"text\"][disabled],\r\n input[type=\"email\"][disabled],\r\n input[type=\"password\"][disabled],\r\n textarea[disabled] {\r\n   opacity: 0.5;\r\n }\r\n input:-webkit-autofill {\r\n   -webkit-box-shadow: 0 0 0 1000px white inset;\r\n }\r\n .checkbox {\r\n   display: inline-block;\r\n   height: 3rem;\r\n   position: relative;\r\n   vertical-align: middle;\r\n   width: 44px;\r\n }\r\n .checkbox input[type=\"checkbox\"] {\r\n   font-size: 1em;\r\n   visibility: hidden;\r\n }\r\n .checkbox input[type=\"checkbox\"] + span:before {\r\n   position: absolute;\r\n   top: 50%;\r\n   right: auto;\r\n   bottom: auto;\r\n   left: 50%;\r\n   width: 0.85em;\r\n   height: 0.85em;\r\n   transform: translate3d(-50%, -50%, 0);\r\n   background: transparent;\r\n   box-shadow: #2cc5d2 0 0 0 1px inset;\r\n   content: '';\r\n   display: block;\r\n }\r\n .checkbox input[type=\"checkbox\"]:checked + span:before {\r\n   font-size: 16px;\r\n   line-height: 24px;\r\n   box-shadow: none;\r\n   color: #2cc5d2;\r\n   margin-top: -1px;\r\n   font-family: 'percolate';\r\n   speak: none;\r\n   font-style: normal;\r\n   font-weight: normal;\r\n   font-variant: normal;\r\n   text-transform: none;\r\n   line-height: 1;\r\n   -webkit-font-smoothing: antialiased;\r\n   -moz-osx-font-smoothing: grayscale;\r\n   content: \"\\e65e\";\r\n }\r\n .input-symbol {\r\n   display: inline-block;\r\n   position: relative;\r\n }\r\n .input-symbol.error [class^=\"icon-\"],\r\n .input-symbol.error [class*=\" icon-\"] {\r\n   color: #ff4400;\r\n }\r\n .input-symbol [class^=\"icon-\"],\r\n .input-symbol [class*=\" icon-\"] {\r\n   left: 1em;\r\n }\r\n .input-symbol input {\r\n   padding-left: 3em;\r\n }\r\n .input-symbol input {\r\n   width: 100%;\r\n }\r\n .input-symbol input:focus + [class^=\"icon-\"],\r\n .input-symbol input:focus + [class*=\" icon-\"] {\r\n   color: #2cc5d2;\r\n }\r\n .input-symbol [class^=\"icon-\"],\r\n .input-symbol [class*=\" icon-\"] {\r\n   transition: all 300ms ease-in;\r\n   transform: translate3d(0, -50%, 0);\r\n   background: transparent;\r\n   color: #aaa;\r\n   font-size: 1em;\r\n   height: 1em;\r\n   position: absolute;\r\n   top: 50%;\r\n   width: 1em;\r\n }\r\n @font-face {\r\n   font-family: \"percolate\";\r\n   src: url(\"./assets/icon/percolate.eot?-5w3um4\");\r\n   src: url(\"./assets/icon/percolate.eot?#iefix5w3um4\") format(\"embedded-opentype\"),\r\n     url(\"./assets/icon/percolate.woff?5w3um4\") format(\"woff\"),\r\n     url(\"./assets/icon/percolate.ttf?5w3um4\") format(\"truetype\"),\r\n     url(\"./assets/icon/percolate.svg?5w3um4\") format(\"svg\");\r\n   font-weight: normal;\r\n   font-style: normal;\r\n }\r\n [class^=\"icon-\"],\r\n [class*=\" icon-\"] {\r\n   font-family: \"percolate\";\r\n   speak: none;\r\n   font-style: normal;\r\n   font-weight: normal;\r\n   font-variant: normal;\r\n   text-transform: none;\r\n   line-height: 1;\r\n   /* Better Font Rendering =========== */\r\n   -webkit-font-smoothing: antialiased;\r\n   -moz-osx-font-smoothing: grayscale;\r\n }\r\n .icon-graphql:before {\r\n   content: \"\\e90a\";\r\n }\r\n .icon-redux:before {\r\n   content: \"\\e908\";\r\n }\r\n .icon-grid:before {\r\n   content: \"\\e909\";\r\n }\r\n .icon-redirect:before {\r\n   content: \"\\e907\";\r\n }\r\n .icon-grow:before {\r\n   content: \"\\e903\";\r\n }\r\n .icon-lightning:before {\r\n   content: \"\\e904\";\r\n }\r\n .icon-request-change:before {\r\n   content: \"\\e905\";\r\n }\r\n .icon-transfer:before {\r\n   content: \"\\e906\";\r\n }\r\n .icon-calendar:before {\r\n   content: \"\\e902\";\r\n }\r\n .icon-sidebar:before {\r\n   content: \"\\e900\";\r\n }\r\n .icon-tablet:before {\r\n   content: \"\\e901\";\r\n }\r\n .icon-atmosphere:before {\r\n   content: \"\\e671\";\r\n }\r\n .icon-browser:before {\r\n   content: \"\\e672\";\r\n }\r\n .icon-database:before {\r\n   content: \"\\e673\";\r\n }\r\n .icon-expand-alt:before {\r\n   content: \"\\e674\";\r\n }\r\n .icon-mobile:before {\r\n   content: \"\\e675\";\r\n }\r\n .icon-watch:before {\r\n   content: \"\\e676\";\r\n }\r\n .icon-home:before {\r\n   content: \"\\e600\";\r\n }\r\n .icon-user-alt:before {\r\n   content: \"\\e601\";\r\n }\r\n .icon-user:before {\r\n   content: \"\\e602\";\r\n }\r\n .icon-user-add:before {\r\n   content: \"\\e603\";\r\n }\r\n .icon-users:before {\r\n   content: \"\\e604\";\r\n }\r\n .icon-profile:before {\r\n   content: \"\\e605\";\r\n }\r\n .icon-bookmark:before {\r\n   content: \"\\e606\";\r\n }\r\n .icon-bookmark-hollow:before {\r\n   content: \"\\e607\";\r\n }\r\n .icon-star:before {\r\n   content: \"\\e608\";\r\n }\r\n .icon-star-hollow:before {\r\n   content: \"\\e609\";\r\n }\r\n .icon-circle:before {\r\n   content: \"\\e60a\";\r\n }\r\n .icon-circle-hollow:before {\r\n   content: \"\\e60b\";\r\n }\r\n .icon-heart:before {\r\n   content: \"\\e60c\";\r\n }\r\n .icon-heart-hollow:before {\r\n   content: \"\\e60d\";\r\n }\r\n .icon-face-happy:before {\r\n   content: \"\\e60e\";\r\n }\r\n .icon-face-sad:before {\r\n   content: \"\\e60f\";\r\n }\r\n .icon-face-neutral:before {\r\n   content: \"\\e610\";\r\n }\r\n .icon-lock:before {\r\n   content: \"\\e611\";\r\n }\r\n .icon-unlock:before {\r\n   content: \"\\e612\";\r\n }\r\n .icon-key:before {\r\n   content: \"\\e613\";\r\n }\r\n .icon-arrow-left-alt:before {\r\n   content: \"\\e614\";\r\n }\r\n .icon-arrow-right-alt:before {\r\n   content: \"\\e615\";\r\n }\r\n .icon-sync:before {\r\n   content: \"\\e616\";\r\n }\r\n .icon-reply:before {\r\n   content: \"\\e617\";\r\n }\r\n .icon-expand:before {\r\n   content: \"\\e618\";\r\n }\r\n .icon-arrow-left:before {\r\n   content: \"\\e619\";\r\n }\r\n .icon-arrow-up:before {\r\n   content: \"\\e61a\";\r\n }\r\n .icon-arrow-down:before {\r\n   content: \"\\e61b\";\r\n }\r\n .icon-arrow-right:before {\r\n   content: \"\\e61c\";\r\n }\r\n .icon-chevron-down:before {\r\n   content: \"\\e61d\";\r\n }\r\n .icon-back:before {\r\n   content: \"\\e61e\";\r\n }\r\n .icon-download:before {\r\n   content: \"\\e61f\";\r\n }\r\n .icon-upload:before {\r\n   content: \"\\e620\";\r\n }\r\n .icon-proceed:before {\r\n   content: \"\\e621\";\r\n }\r\n .icon-info:before {\r\n   content: \"\\e622\";\r\n }\r\n .icon-question:before {\r\n   content: \"\\e623\";\r\n }\r\n .icon-alert:before {\r\n   content: \"\\e624\";\r\n }\r\n .icon-edit:before {\r\n   content: \"\\e625\";\r\n }\r\n .icon-paintbrush:before {\r\n   content: \"\\e626\";\r\n }\r\n .icon-close:before {\r\n   content: \"\\e627\";\r\n }\r\n .icon-trash:before {\r\n   content: \"\\e628\";\r\n }\r\n .icon-cross:before {\r\n   content: \"\\e629\";\r\n }\r\n .icon-delete:before {\r\n   content: \"\\e62a\";\r\n }\r\n .icon-power:before {\r\n   content: \"\\e62b\";\r\n }\r\n .icon-add:before {\r\n   content: \"\\e62c\";\r\n }\r\n .icon-plus:before {\r\n   content: \"\\e62d\";\r\n }\r\n .icon-document:before {\r\n   content: \"\\e62e\";\r\n }\r\n .icon-graph-line:before {\r\n   content: \"\\e62f\";\r\n }\r\n .icon-doc-chart:before {\r\n   content: \"\\e630\";\r\n }\r\n .icon-doc-list:before {\r\n   content: \"\\e631\";\r\n }\r\n .icon-category:before {\r\n   content: \"\\e632\";\r\n }\r\n .icon-copy:before {\r\n   content: \"\\e633\";\r\n }\r\n .icon-book:before {\r\n   content: \"\\e634\";\r\n }\r\n .icon-certificate:before {\r\n   content: \"\\e636\";\r\n }\r\n .icon-print:before {\r\n   content: \"\\e637\";\r\n }\r\n .icon-list-unordered:before {\r\n   content: \"\\e638\";\r\n }\r\n .icon-graph-bar:before {\r\n   content: \"\\e639\";\r\n }\r\n .icon-menu:before {\r\n   content: \"\\e63a\";\r\n }\r\n .icon-filter:before {\r\n   content: \"\\e63b\";\r\n }\r\n .icon-ellipsis:before {\r\n   content: \"\\e63c\";\r\n }\r\n .icon-cog:before {\r\n   content: \"\\e63d\";\r\n }\r\n .icon-wrench:before {\r\n   content: \"\\e63e\";\r\n }\r\n .icon-nut:before {\r\n   content: \"\\e63f\";\r\n }\r\n .icon-camera:before {\r\n   content: \"\\e640\";\r\n }\r\n .icon-eye:before {\r\n   content: \"\\e641\";\r\n }\r\n .icon-photo:before {\r\n   content: \"\\e642\";\r\n }\r\n .icon-video:before {\r\n   content: \"\\e643\";\r\n }\r\n .icon-speaker:before {\r\n   content: \"\\e644\";\r\n }\r\n .icon-phone:before {\r\n   content: \"\\e645\";\r\n }\r\n .icon-flag:before {\r\n   content: \"\\e646\";\r\n }\r\n .icon-pin:before {\r\n   content: \"\\e647\";\r\n }\r\n .icon-compass:before {\r\n   content: \"\\e648\";\r\n }\r\n .icon-globe:before {\r\n   content: \"\\e649\";\r\n }\r\n .icon-location:before {\r\n   content: \"\\e64a\";\r\n }\r\n .icon-search:before {\r\n   content: \"\\e64b\";\r\n }\r\n .icon-timer:before {\r\n   content: \"\\e64c\";\r\n }\r\n .icon-time:before {\r\n   content: \"\\e64d\";\r\n }\r\n .icon-dashboard:before {\r\n   content: \"\\e64e\";\r\n }\r\n .icon-hourglass:before {\r\n   content: \"\\e64f\";\r\n }\r\n .icon-play:before {\r\n   content: \"\\e650\";\r\n }\r\n .icon-stop:before {\r\n   content: \"\\e651\";\r\n }\r\n .icon-email:before {\r\n   content: \"\\e652\";\r\n }\r\n .icon-comment:before {\r\n   content: \"\\e653\";\r\n }\r\n .icon-link:before {\r\n   content: \"\\e654\";\r\n }\r\n .icon-paperclip:before {\r\n   content: \"\\e655\";\r\n }\r\n .icon-box:before {\r\n   content: \"\\e656\";\r\n }\r\n .icon-structure:before {\r\n   content: \"\\e657\";\r\n }\r\n .icon-commit:before {\r\n   content: \"\\e658\";\r\n }\r\n .icon-cpu:before {\r\n   content: \"\\e659\";\r\n }\r\n .icon-memory:before {\r\n   content: \"\\e65a\";\r\n }\r\n .icon-outbox:before {\r\n   content: \"\\e65b\";\r\n }\r\n .icon-share:before {\r\n   content: \"\\e65c\";\r\n }\r\n .icon-button:before {\r\n   content: \"\\e65d\";\r\n }\r\n .icon-check:before {\r\n   content: \"\\e65e\";\r\n }\r\n .icon-form:before {\r\n   content: \"\\e65f\";\r\n }\r\n .icon-admin:before {\r\n   content: \"\\e660\";\r\n }\r\n .icon-paragraph:before {\r\n   content: \"\\e661\";\r\n }\r\n .icon-bell:before {\r\n   content: \"\\e662\";\r\n }\r\n .icon-rss:before {\r\n   content: \"\\e663\";\r\n }\r\n .icon-basket:before {\r\n   content: \"\\e664\";\r\n }\r\n .icon-credit:before {\r\n   content: \"\\e665\";\r\n }\r\n .icon-support:before {\r\n   content: \"\\e666\";\r\n }\r\n .icon-shield:before {\r\n   content: \"\\e667\";\r\n }\r\n .icon-beaker:before {\r\n   content: \"\\e668\";\r\n }\r\n .icon-google:before {\r\n   content: \"\\e669\";\r\n }\r\n .icon-gdrive:before {\r\n   content: \"\\e66a\";\r\n }\r\n .icon-youtube:before {\r\n   content: \"\\e66b\";\r\n }\r\n .icon-facebook:before {\r\n   content: \"\\e66c\";\r\n }\r\n .icon-thumbs-up:before {\r\n   content: \"\\e66d\";\r\n }\r\n .icon-twitter:before {\r\n   content: \"\\e66e\";\r\n }\r\n .icon-github:before {\r\n   content: \"\\e66f\";\r\n }\r\n .icon-meteor:before {\r\n   content: \"\\e670\";\r\n }\r\n a {\r\n   transition: all 200ms ease-in;\r\n   color: #5db9ff;\r\n   cursor: pointer;\r\n   text-decoration: none;\r\n }\r\n a:hover {\r\n   color: #239da8;\r\n }\r\n a:active {\r\n   color: #555;\r\n }\r\n a:focus {\r\n   outline: none;\r\n }\r\n .list-heading {\r\n   letter-spacing: 0.3em;\r\n   text-indent: 0.3em;\r\n   text-transform: uppercase;\r\n   font-family: 'Nunito Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n   font-weight: 800;\r\n   font-size: 11px;\r\n   padding-left: 15px;\r\n   line-height: 40px;\r\n   background: #f8f8f8;\r\n   color: #aaa;\r\n }\r\n .list-heading .icon-sync {\r\n   opacity: 1;\r\n   animation: spin 2s infinite linear;\r\n   display: inline-block;\r\n   margin-right: 4px;\r\n }\r\n .list-item {\r\n   font-size: 14px;\r\n   line-height: 20px;\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n   height: 3rem;\r\n   width: 100%;\r\n   background: white;\r\n   transition: all ease-out 150ms;\r\n }\r\n .list-item .title {\r\n   overflow: hidden;\r\n   text-overflow: ellipsis;\r\n   white-space: nowrap;\r\n   flex: 1;\r\n }\r\n .list-item input[type=\"text\"] {\r\n   background: transparent;\r\n   width: 100%;\r\n }\r\n .list-item input[type=\"text\"]:focus {\r\n   cursor: text;\r\n }\r\n .list-item .actions {\r\n   transition: all 200ms ease-in;\r\n   padding-right: 20px;\r\n }\r\n .list-item .actions a {\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   text-align: center;\r\n   color: #eee;\r\n }\r\n .list-item .actions a:hover {\r\n   color: #2cc5d2;\r\n }\r\n .list-item .actions a:active {\r\n   color: #555;\r\n }\r\n .list-item .actions [class^=\"icon-\"] {\r\n   font-size: 16px;\r\n   line-height: 24px;\r\n   line-height: 3rem;\r\n   text-align: center;\r\n }\r\n .list-item.TASK_PINNED .icon-star {\r\n   color: #2cc5d2;\r\n }\r\n .list-item.TASK_ARCHIVED input[type=\"text\"] {\r\n   color: #aaa;\r\n }\r\n .list-item:hover {\r\n   background-image: linear-gradient(to bottom, #e5f9f7 0%, #f0fffd 100%);\r\n }\r\n .list-item:hover .checkbox {\r\n   cursor: pointer;\r\n }\r\n .list-item + .list-item {\r\n   border-top: 1px solid #f0f9fb;\r\n }\r\n .list-item.checked input[type=\"text\"] {\r\n   color: #ccc;\r\n   text-decoration: line-through;\r\n }\r\n .list-item.checked .delete-item {\r\n   display: inline-block;\r\n }\r\n .loading-item {\r\n   height: 3rem;\r\n   width: 100%;\r\n   background: white;\r\n   display: flex;\r\n   align-items: center;\r\n   line-height: 1rem;\r\n   padding-left: 16px;\r\n }\r\n .loading-item .glow-checkbox,\r\n .loading-item .glow-text span {\r\n   animation: glow 1.5s ease-in-out infinite;\r\n   background: #eee;\r\n   color: transparent;\r\n   cursor: progress;\r\n   display: inline-block;\r\n }\r\n .loading-item .glow-checkbox {\r\n   margin-right: 16px;\r\n   width: 12px;\r\n   height: 12px;\r\n }\r\n .loading-item + .loading-item {\r\n   border-top: 1px solid #f0f9fb;\r\n }\r\n .list-items {\r\n   position: relative;\r\n   background: white;\r\n   min-height: 288px;\r\n }\r\n .list-items .select-placeholder {\r\n   border: none;\r\n   width: 48px;\r\n }\r\n .wrapper-message {\r\n   position: absolute;\r\n   top: 45%;\r\n   right: 0;\r\n   bottom: auto;\r\n   left: 0;\r\n   width: auto;\r\n   height: auto;\r\n   transform: translate3d(0, -50%, 0);\r\n   text-align: center;\r\n }\r\n .wrapper-message [class^=\"icon-\"],\r\n .wrapper-message [class*=\" icon-\"] {\r\n   font-size: 48px;\r\n   line-height: 56px;\r\n   color: #2cc5d2;\r\n   display: block;\r\n }\r\n .wrapper-message .title-message {\r\n   font-size: 16px;\r\n   line-height: 24px;\r\n   font-family: 'Nunito Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n   font-weight: 800;\r\n   color: #555;\r\n }\r\n .wrapper-message .subtitle-message {\r\n   font-size: 14px;\r\n   line-height: 20px;\r\n   color: #666;\r\n }\r\n .page.lists-show {\r\n   min-height: 100vh;\r\n   background: white;\r\n }\r\n .page.lists-show nav {\r\n   background: #d3edf4;\r\n   padding: 1.5rem 1.25rem;\r\n   text-align: center;\r\n }\r\n @media screen and (min-width: 40em) {\r\n   .page.lists-show nav {\r\n     text-align: left;\r\n   }\r\n }\r\n .page.lists-show nav .title-page {\r\n   font-size: 20px;\r\n   line-height: 24px;\r\n   line-height: 2rem;\r\n   cursor: pointer;\r\n   white-space: nowrap;\r\n }\r\n .page.lists-show nav .title-page .title-wrapper {\r\n   overflow: hidden;\r\n   text-overflow: ellipsis;\r\n   white-space: nowrap;\r\n   font-family: 'Nunito Sans', \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n   font-weight: 800;\r\n   color: #1c3f53;\r\n   display: inline-block;\r\n   vertical-align: top;\r\n   max-width: 100%;\r\n }",
                    "styleUrl": "./task.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"list-item {{ task?.state }}\">\n  <label class=\"checkbox\">\n    <input\n      type=\"checkbox\"\n      [defaultChecked]=\"task?.state === 'TASK_ARCHIVED'\"\n      disabled=\"true\"\n      name=\"checked\"\n    />\n    <span class=\"checkbox-custom\" (click)=\"onArchive(task?.id)\"></span>\n  </label>\n  <div class=\"title\">\n    <input\n      type=\"text\"\n      [value]=\"task?.title\"\n      readonly=\"true\"\n      placeholder=\"Input title\"\n    />\n  </div>\n  <div class=\"actions\">\n    <a *ngIf=\"task?.state !== 'TASK_ARCHIVED'\" (click)=\"onPin(task?.id)\">\n      <span class=\"icon-star\"></span>\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "TitleComponent",
            "id": "component-TitleComponent-d450de26bee1f6dac060ef72fb4123ba24811b8b390497a5c16c23a0151964e09c9cbf23f047fed85a28566f770fb3d8a8c076f7bac8441990515e88d1b89336",
            "file": "src/app/title/title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-title",
            "styleUrls": [
                "./title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./title.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Todo</h1>\n"
        },
        {
            "name": "TodoAddComponent",
            "id": "component-TodoAddComponent-b23c8e6f8a509563f7497536cca3667d0cfaefaadb8a1f09911356313f4996b87b17a9b9c59c78bcb27c22b7768fa846939877aee3d672164aad1cc94493ba26",
            "file": "src/app/todo-add/todo-add.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todo-add",
            "styleUrls": [
                "./todo-add.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todo-add.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onAddButton",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "addTodo",
                    "args": [
                        {
                            "name": "todo",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "todo",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-todo-add',\n  templateUrl: './todo-add.component.html',\n  styleUrls: ['./todo-add.component.scss'],\n})\nexport class TodoAddComponent implements OnInit {\n  @Output() onAddButton = new EventEmitter<string>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  addTodo(todo: HTMLInputElement) {\n    if (todo.value) {\n      this.onAddButton.emit(todo.value);\n      todo.value = '';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todo-add.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<input #todo (keyup.enter)=\"addTodo(todo)\" />\n<button (click)=\"addTodo(todo)\">Add</button>\n"
        },
        {
            "name": "TodoComponent",
            "id": "component-TodoComponent-2b4e9a8cf8c3ce89281ab793c5e1361341e957f5e51ccfc0a82f05d957947cc3f01da820f88fb9581c70fe8b03dbbdb5dfb92a6d25dd2521cb06d04136b73153",
            "file": "src/app/todoes/todo/todo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todo",
            "styleUrls": [
                "./todo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "todo",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss'],\n})\nexport class TodoComponent implements OnInit {\n  @Input() todo: string = '';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<li>{{ todo }}</li>\n"
        },
        {
            "name": "TodoesComponent",
            "id": "component-TodoesComponent-3437fa29b42408d0ee2670f6ddd68b93263d25526e9d47f804890a4008b1fb8ae18eeafa31b6a57e37782c7ad800ffa1476c0cfc35fb81a66da14be8fa1e6411",
            "file": "src/app/todoes/todoes.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todoes",
            "styleUrls": [
                "./todoes.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todoes.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "todoes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todoes',\n  templateUrl: './todoes.component.html',\n  styleUrls: ['./todoes.component.scss'],\n})\nexport class TodoesComponent implements OnInit {\n  @Input() todoes: string[] = [];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todoes.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ul>\n  <app-todo *ngFor=\"let todo of todoes\" [todo]=\"todo\"></app-todo>\n</ul>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-539f58e0ca2c993e547d5b9c7e34bff82c61fbdfcc23e861f3eae8a9ecbe2f399c308320cacb6bc95f8acce527c853c92b58b0bcbd29daedb3578a26de3a055d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { TodoesComponent } from './todoes/todoes.component';\nimport { TodoComponent } from './todoes/todo/todo.component';\nimport { TodoAddComponent } from './todo-add/todo-add.component';\nimport { TitleComponent } from './title/title.component';\nimport { TaskComponent } from './task/task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoesComponent,\n    TodoComponent,\n    TodoAddComponent,\n    TitleComponent,\n    TaskComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "TaskComponent"
                        },
                        {
                            "name": "TitleComponent"
                        },
                        {
                            "name": "TodoAddComponent"
                        },
                        {
                            "name": "TodoComponent"
                        },
                        {
                            "name": "TodoesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onPinTask: action('onPinTask'),\n  onArchiveTask: action('onArchiveTask'),\n}"
            },
            {
                "name": "Archived",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Object.assign(Template)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Object.assign(Template)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/todoes/todo/todo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "Pinned",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Object.assign(Template)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<TaskComponent>",
                "defaultValue": "{\n  render: (args) => ({\n    props: {\n      ...args,\n      onPinTask: actionsData.onPinTask,\n      onArchiveTask: actionsData.onArchiveTask,\n    },\n  }),\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/todoes/todo/todo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TodoComponent>",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/task/task.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onPinTask: action('onPinTask'),\n  onArchiveTask: action('onArchiveTask'),\n}"
                },
                {
                    "name": "Archived",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Object.assign(Template)"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Object.assign(Template)"
                },
                {
                    "name": "Pinned",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Object.assign(Template)"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<TaskComponent>",
                    "defaultValue": "{\n  render: (args) => ({\n    props: {\n      ...args,\n      onPinTask: actionsData.onPinTask,\n      onArchiveTask: actionsData.onArchiveTask,\n    },\n  }),\n}"
                }
            ],
            "src/app/todoes/todo/todo.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/todoes/todo/todo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/todoes/todo/todo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TodoComponent>",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/task.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Task",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/task/task.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskComponent",
                "coveragePercent": 25,
                "coverageCount": "2/8",
                "status": "low"
            },
            {
                "filePath": "src/app/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Archived",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pinned",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/title/title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/todo-add/todo-add.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodoAddComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/todoes/todo/todo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/todoes/todo/todo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/todoes/todo/todo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/todoes/todoes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodoesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}